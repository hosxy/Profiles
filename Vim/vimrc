set encoding=utf-8

" 关闭 VI 兼容模式
set nocompatible

if has("win32")
    " 设置 VIM 数据目录
    let $VIM_DATA_HOME=$VIM."/vimfiles"
   
    " 定义退格键行为
    set backspace=indent,eol,start
else
	" 设置 VIM 数据目录
    let $VIM_DATA_HOME=$XDG_DATA_HOME."/vim"
	
    " 添加 XDG 标准目录到 vim 的 runtimepath
    set runtimepath+=$VIM_DATA_HOME
    set packpath+=$VIM_DATA_HOME
endif

" 规范目录
set undodir=$VIM_DATA_HOME/temp/undo
set backupdir=$VIM_DATA_HOME/temp/backup
set directory=$VIM_DATA_HOME/temp/swap
set viminfo+=n$VIM_DATA_HOME/viminfo				" 必须放在 set nocompatible 后面

" 设定 vim-plug 插件存放目录
let $PlugPath=$VIM_DATA_HOME."/plugged"

""""""""""""""""""""""""""""""""""  Install Plugin """"""""""""""""""""""""
call plug#begin('$PlugPath')

" 配色主题
Plug 'morhetz/gruvbox'

" 自动补全括号等
Plug 'jiangmiao/auto-pairs'

" 缩进指示线
Plug 'Yggdroot/indentLine'

" 自动保存
Plug '907th/vim-auto-save'

" 美化状态栏
Plug 'itchyny/lightline.vim'
Plug 'mengelbrecht/lightline-bufferline'

" 语法高亮
Plug 'rust-lang/rust.vim'
Plug 'dag/vim-fish'

" 目录树
Plug 'scrooloose/nerdtree'

" 中文文档翻译
Plug 'yianwillis/vimcdoc'

" VIM 内置终端快捷操作
Plug 'skywind3000/vim-terminal-help'

call plug#end()


""""""""""""""""""""""""""""""""""""""""""" Configure """"""""""""""""""""""""""""""""""""""""
" 关闭自动备份，
set nobackup

" 显示行号
set number

" 开启语法高亮
syntax on

" 高亮当前行
set cursorline

" 设置tab键为4个空格
set tabstop=4
set softtabstop=4
set shiftwidth=4
set expandtab

" 自动缩进
set autoindent
set smartindent

" 终端使用真彩色(guicolor)
set termguicolors

" 设置默认进行大小写不敏感查找,如果有包含大写字母则进行大小写敏感查找
set ignorecase
set smartcase

" 开启鼠标
set mouse=a

" 使用系统剪切版
set clipboard=unnamedplus


""""""""""""""""""""""""" gruvbox
let g:gruvbox_bold=1
let g:gruvbox_italic=1
let g:gruvbox_improved_strings=1
let g:gruvbox_contrast_dark='hard'

" 配色方案
set background=dark
colorscheme gruvbox


""""""""""""""""""""""""" Auto-Save
let g:auto_save = 1
let g:auto_save_events=["InsertLeave","FocusLost"]


"""""""""""""""""""" AirLine
let g:lightline = {'colorscheme': 'one',}
let g:lightline.separator = {'left': '', 'right': ''}
let g:lightline.subseparator = {'left': '', 'right': ''}

let g:lightline.tabline          = {'left': [['buffers']], 'right': [['close']]}
let g:lightline.component_expand = {'buffers': 'lightline#bufferline#buffers'}
let g:lightline.component_type   = {'buffers': 'tabsel'}

set showtabline=2
let g:lightline#bufferline#filename_modifier = ':t'       " only filename, no path
let g:lightline#bufferline#show_number  = 1
let g:lightline#bufferline#shorten_path = 1
let g:lightline#bufferline#unnamed      = '[No Name]'
let g:lightline#bufferline#unicode_symbols = 1
let g:lightline#bufferline#enable_devicons = 1



"""""""""""""""""""""""""" IndentLine
let g:indentLine_concealcursor = ''
let g:indentLine_conceallevel = 1


"""""""""""""""""""""" NERDTree
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
" 最后是个 window 是 NERDTree 时自动退出
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

let NERDTreeWinSize=20






"""""""""""""""""""""""""""""""""""""""" Key Map """"""""""""""""""""""""""""""""""""""""
"切换 buffer
nnoremap <F8> :bp<CR>
nnoremap <F9> :bn<CR>

" sudo 保存文件
cmap w!! w !sudo tee %

" 终端下插入模式光标形状为竖线
if &term =~ "xterm"
	let &t_SI = "\e[5 q"
	let &t_SR = "\e[6 q"    
	let &t_EI = "\e[2 q" 
endif
